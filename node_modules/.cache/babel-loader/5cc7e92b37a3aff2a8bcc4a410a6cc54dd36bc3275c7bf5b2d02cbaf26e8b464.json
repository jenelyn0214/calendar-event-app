{"ast":null,"code":"// src/actions/authActions.ts\nimport axios from 'axios';\n// Correct import of jwtDecode\nimport { jwtDecode } from \"jwt-decode\";\nimport { loginRequest, loginSuccess, loginFailure, logout } from '../reducers/authReducer';\nexport const login = credentials => async dispatch => {\n  try {\n    dispatch(loginRequest());\n    const response = await axios.post('https://your-api-url.com/login', credentials);\n    const {\n      token\n    } = response.data;\n\n    // Correct use of jwtDecode\n    const user = jwtDecode(token); // Decode the JWT token\n\n    localStorage.setItem('token', token); // Store token in localStorage\n\n    dispatch(loginSuccess({\n      token,\n      user\n    }));\n  } catch (error) {\n    dispatch(loginFailure(error.response ? error.response.data.message : 'Login failed'));\n  }\n};\nexport const logoutUser = () => dispatch => {\n  localStorage.removeItem('token');\n  dispatch(logout());\n};","map":{"version":3,"names":["axios","jwtDecode","loginRequest","loginSuccess","loginFailure","logout","login","credentials","dispatch","response","post","token","data","user","localStorage","setItem","error","message","logoutUser","removeItem"],"sources":["/Users/gylou/Documents/projects/calendar-event-app/src/actions/authActions.ts"],"sourcesContent":["// src/actions/authActions.ts\nimport axios from 'axios';\n// Correct import of jwtDecode\nimport {jwtDecode} from \"jwt-decode\";\nimport { AppThunk } from '../store';\nimport { loginRequest, loginSuccess, loginFailure, logout } from '../reducers/authReducer';\n\ninterface LoginResponse {\n  token: string;\n}\n\nexport const login = (credentials: { email: string; password: string }): AppThunk => async (dispatch) => {\n  try {\n    dispatch(loginRequest());\n\n    const response = await axios.post<LoginResponse>('https://your-api-url.com/login', credentials);\n    const { token } = response.data;\n\n    // Correct use of jwtDecode\n    const user = jwtDecode(token);  // Decode the JWT token\n\n    localStorage.setItem('token', token);  // Store token in localStorage\n\n    dispatch(loginSuccess({ token, user }));\n  } catch (error: any) {\n    dispatch(loginFailure(error.response ? error.response.data.message : 'Login failed'));\n  }\n};\n\nexport const logoutUser = (): AppThunk => (dispatch) => {\n  localStorage.removeItem('token');\n  dispatch(logout());\n};\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA,SAAQC,SAAS,QAAO,YAAY;AAEpC,SAASC,YAAY,EAAEC,YAAY,EAAEC,YAAY,EAAEC,MAAM,QAAQ,yBAAyB;AAM1F,OAAO,MAAMC,KAAK,GAAIC,WAAgD,IAAe,MAAOC,QAAQ,IAAK;EACvG,IAAI;IACFA,QAAQ,CAACN,YAAY,CAAC,CAAC,CAAC;IAExB,MAAMO,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAI,CAAgB,gCAAgC,EAAEH,WAAW,CAAC;IAC/F,MAAM;MAAEI;IAAM,CAAC,GAAGF,QAAQ,CAACG,IAAI;;IAE/B;IACA,MAAMC,IAAI,GAAGZ,SAAS,CAACU,KAAK,CAAC,CAAC,CAAE;;IAEhCG,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEJ,KAAK,CAAC,CAAC,CAAE;;IAEvCH,QAAQ,CAACL,YAAY,CAAC;MAAEQ,KAAK;MAAEE;IAAK,CAAC,CAAC,CAAC;EACzC,CAAC,CAAC,OAAOG,KAAU,EAAE;IACnBR,QAAQ,CAACJ,YAAY,CAACY,KAAK,CAACP,QAAQ,GAAGO,KAAK,CAACP,QAAQ,CAACG,IAAI,CAACK,OAAO,GAAG,cAAc,CAAC,CAAC;EACvF;AACF,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAiBV,QAAQ,IAAK;EACtDM,YAAY,CAACK,UAAU,CAAC,OAAO,CAAC;EAChCX,QAAQ,CAACH,MAAM,CAAC,CAAC,CAAC;AACpB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}