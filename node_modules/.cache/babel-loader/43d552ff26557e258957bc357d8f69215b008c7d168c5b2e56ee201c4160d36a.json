{"ast":null,"code":"var _jsxFileName = \"/Users/gylou/Documents/projects/calendar-event-app/src/screen/CalendarPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Calendar as BigCalendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport { fetchEvents, createEvent, deleteEvent } from '../api/event';\nimport ViewEventModal from '../components/ViewEventModal';\nimport CreateEventModal from '../components/CreateEventModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst localizer = momentLocalizer(moment);\nconst CalendarPage = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [selectedEvent, setSelectedEvent] = useState(null); // For selected event\n  const [showModal, setShowModal] = useState(false);\n  const [showCreateModal, setShowCreateModal] = useState(false); // For create modal\n  const [slotInfo, setSlotInfo] = useState(null); // Slot info for creating events\n\n  const loadEvents = () => {\n    fetchEvents().then(data => {\n      setEvents(prev => [...data]);\n    });\n  };\n  useEffect(() => {\n    loadEvents();\n  }, []);\n  const handleSelectSlot = slotInfo => {\n    setSlotInfo(slotInfo);\n    setShowCreateModal(true); // Show modal when a time slot is clicked\n  };\n\n  // Handle event selection for viewing and deleting\n  const handleSelectEvent = event => {\n    setSelectedEvent(event);\n    setShowModal(true); // Show modal when an event is clicked\n  };\n\n  // Handle event deletion inside modal\n  const handleDeleteEvent = async eventId => {\n    await deleteEvent(eventId);\n    setShowModal(false); // Close modal after deletion\n    loadEvents(); // Reload events after deleting\n  };\n\n  // Handle creating a new event from the modal\n  const handleCreateEvent = async eventData => {\n    await createEvent(eventData);\n    loadEvents(); // Reload events after creating a new one\n    setShowCreateModal(false); // Close the modal after creation\n  };\n  console.log('zzzz', events);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(BigCalendar, {\n      localizer: localizer,\n      events: events,\n      startAccessor: \"start\",\n      endAccessor: \"end\",\n      selectable: true,\n      onSelectSlot: handleSelectSlot,\n      onSelectEvent: handleSelectEvent,\n      style: {\n        height: 500\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ViewEventModal, {\n      show: showModal,\n      event: selectedEvent,\n      onClose: () => setShowModal(false),\n      onDelete: handleDeleteEvent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateEventModal, {\n      show: showCreateModal,\n      onClose: () => setShowCreateModal(false),\n      onCreate: handleCreateEvent,\n      slotInfo: slotInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(CalendarPage, \"6RLVQgrn0A8UJKjUZRyh91/6JzI=\");\n_c = CalendarPage;\nexport default CalendarPage;\nvar _c;\n$RefreshReg$(_c, \"CalendarPage\");","map":{"version":3,"names":["React","useState","useEffect","Calendar","BigCalendar","momentLocalizer","moment","fetchEvents","createEvent","deleteEvent","ViewEventModal","CreateEventModal","jsxDEV","_jsxDEV","localizer","CalendarPage","_s","events","setEvents","selectedEvent","setSelectedEvent","showModal","setShowModal","showCreateModal","setShowCreateModal","slotInfo","setSlotInfo","loadEvents","then","data","prev","handleSelectSlot","handleSelectEvent","event","handleDeleteEvent","eventId","handleCreateEvent","eventData","console","log","children","startAccessor","endAccessor","selectable","onSelectSlot","onSelectEvent","style","height","fileName","_jsxFileName","lineNumber","columnNumber","show","onClose","onDelete","onCreate","_c","$RefreshReg$"],"sources":["/Users/gylou/Documents/projects/calendar-event-app/src/screen/CalendarPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Calendar as BigCalendar, momentLocalizer, Event } from 'react-big-calendar';\nimport moment from 'moment';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\n\nimport { CalendarEvent } from '../types';\nimport { fetchEvents,createEvent, deleteEvent } from '../api/event';\nimport ViewEventModal from '../components/ViewEventModal';\nimport CreateEventModal from '../components/CreateEventModal';\n\nconst localizer = momentLocalizer(moment);\n\n\nconst CalendarPage: React.FC = () => {\n    const [events, setEvents] = useState<CalendarEvent[]>([]);\n    const [selectedEvent, setSelectedEvent] = useState<CalendarEvent | null>(null); // For selected event\n    const [showModal, setShowModal] = useState<boolean>(false);\n    const [showCreateModal, setShowCreateModal] = useState<boolean>(false); // For create modal\n    const [slotInfo, setSlotInfo] = useState<{ start: Date; end: Date } | null>(null); // Slot info for creating events\n\n    const loadEvents = () => {\n        fetchEvents().then((data: CalendarEvent[]) => {\n            setEvents((prev)=>[...data])\n        });\n    };\n\n  useEffect(() => {\n    loadEvents()\n  }, []);\n\n  const handleSelectSlot = (slotInfo: { start: Date; end: Date }) => {\n    setSlotInfo(slotInfo);\n    setShowCreateModal(true); // Show modal when a time slot is clicked\n  };\n\n  // Handle event selection for viewing and deleting\n  const handleSelectEvent = (event: CalendarEvent) => {\n    setSelectedEvent(event);\n    setShowModal(true); // Show modal when an event is clicked\n  };\n\n  // Handle event deletion inside modal\n  const handleDeleteEvent = async (eventId: string) => {\n    await deleteEvent(eventId);\n    setShowModal(false); // Close modal after deletion\n    loadEvents(); // Reload events after deleting\n  };\n\n  // Handle creating a new event from the modal\n  const handleCreateEvent = async (eventData: { title: string; start: Date; end: Date; description: string }) => {\n    await createEvent(eventData);\n    loadEvents(); // Reload events after creating a new one\n    setShowCreateModal(false); // Close the modal after creation\n  };\n\n  console.log('zzzz',events)\n\n  return (\n    <div>\n        <BigCalendar\n            localizer={localizer}\n            events={events}\n            startAccessor=\"start\"\n            endAccessor=\"end\"\n            selectable\n            onSelectSlot={handleSelectSlot}\n            onSelectEvent={handleSelectEvent}\n            style={{ height: 500 }}\n        />\n\n      <ViewEventModal \n        show={showModal} \n        event={selectedEvent} \n        onClose={() => setShowModal(false)} \n        onDelete={handleDeleteEvent} \n      />\n      <CreateEventModal\n        show={showCreateModal}\n        onClose={() => setShowCreateModal(false)}\n        onCreate={handleCreateEvent}\n        slotInfo={slotInfo}\n      />\n    </div>\n  );\n};\n\nexport default CalendarPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}