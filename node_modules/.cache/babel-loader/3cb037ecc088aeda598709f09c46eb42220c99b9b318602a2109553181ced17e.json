{"ast":null,"code":"import axios from \"axios\";\nconst apiClient = axios.create({\n  baseURL: \"https://calendar-event-api-g-567b28a85c4f.herokuapp.com/api\",\n  // Replace with your base URL\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\n\n// Request interceptor to add the JWT token to every request\napiClient.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"token\"); // Get JWT token from localStorage\n  if (token && config.headers) {\n    config.headers[\"Authorization\"] = `Bearer ${token}`; // Add token to Authorization header\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor to handle errors globally\napiClient.interceptors.response.use(response => {\n  return response;\n}, error => {\n  if (error.response && error.response.status === 401) {\n    // Handle unauthorized errors (e.g., token expired)\n    localStorage.removeItem(\"token\");\n    window.location.href = \"/login\"; // Redirect to login page if unauthorized\n  }\n  return Promise.reject(error);\n});\nexport default apiClient;","map":{"version":3,"names":["axios","apiClient","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","error","Promise","reject","response","status","removeItem","window","location","href"],"sources":["/Users/macbookprom1/Projects/calendar-event-app/src/api/apiClient.ts"],"sourcesContent":["import axios from \"axios\";\n\nconst apiClient = axios.create({\n  baseURL: \"https://calendar-event-api-g-567b28a85c4f.herokuapp.com/api\", // Replace with your base URL\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\n// Request interceptor to add the JWT token to every request\napiClient.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem(\"token\"); // Get JWT token from localStorage\n    if (token && config.headers) {\n      config.headers[\"Authorization\"] = `Bearer ${token}`; // Add token to Authorization header\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor to handle errors globally\napiClient.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    if (error.response && error.response.status === 401) {\n      // Handle unauthorized errors (e.g., token expired)\n      localStorage.removeItem(\"token\");\n      window.location.href = \"/login\"; // Redirect to login page if unauthorized\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport default apiClient;\n\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,SAAS,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC7BC,OAAO,EAAE,6DAA6D;EAAE;EACxEC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,SAAS,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAC/BC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;EAC7C,IAAIF,KAAK,IAAID,MAAM,CAACJ,OAAO,EAAE;IAC3BI,MAAM,CAACJ,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUK,KAAK,EAAE,CAAC,CAAC;EACvD;EACA,OAAOD,MAAM;AACf,CAAC,EACAI,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAX,SAAS,CAACI,YAAY,CAACU,QAAQ,CAACR,GAAG,CAChCQ,QAAQ,IAAK;EACZ,OAAOA,QAAQ;AACjB,CAAC,EACAH,KAAK,IAAK;EACT,IAAIA,KAAK,CAACG,QAAQ,IAAIH,KAAK,CAACG,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;IACnD;IACAN,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;IAChCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ,CAAC,CAAC;EACnC;EACA,OAAOP,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeX,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}