{"ast":null,"code":"import apiClient from \"./apiClient\";\n\n// Initial event list\nlet eventList = [{\n  id: \"1\",\n  title: \"Team Meeting\",\n  start: new Date(\"2024-09-20T09:00:00.000Z\"),\n  end: new Date(\"2024-09-20T10:00:00.000Z\"),\n  description: \"Discuss project status\",\n  organizationId: \"123\"\n}];\n\n// Fetch events (returns a promise that resolves the eventList)\nexport function fetchEvents() {\n  return new Promise(resolve => {\n    resolve(eventList);\n  });\n}\n\n// Create event (adds event to eventList and returns a resolved promise)\nexport async function createEvent(event) {\n  const response = await apiClient.post('/events/', {\n    ...event,\n    start_time: event.start,\n    end_time: event.end\n  });\n  return response.data;\n}\n\n// Delete event (removes the event from eventList based on eventId)\nexport async function deleteEvent(eventId) {\n  const response = await apiClient.delete(`/events/${eventId}/`);\n  return response.data;\n}\nexport async function getEvents() {\n  const response = await apiClient.get('/events/');\n  return response.data;\n}","map":{"version":3,"names":["apiClient","eventList","id","title","start","Date","end","description","organizationId","fetchEvents","Promise","resolve","createEvent","event","response","post","start_time","end_time","data","deleteEvent","eventId","delete","getEvents","get"],"sources":["/Users/gylou/Documents/projects/calendar-event-app/src/api/event.ts"],"sourcesContent":["import { CalendarEvent, CalendarEventData } from \"../types\";\nimport apiClient from \"./apiClient\";\n\n// Initial event list\nlet eventList: CalendarEvent[] = [\n  {\n    id: \"1\",\n    title: \"Team Meeting\",\n    start: new Date(\"2024-09-20T09:00:00.000Z\"),\n    end: new Date(\"2024-09-20T10:00:00.000Z\"),\n    description: \"Discuss project status\",\n    organizationId: \"123\"\n  }\n];\n\n// Fetch events (returns a promise that resolves the eventList)\nexport function fetchEvents(): Promise<CalendarEvent[]> {\n  return new Promise((resolve) => {\n    resolve(eventList);\n  });\n}\n\n\n// Create event (adds event to eventList and returns a resolved promise)\nexport async function createEvent(event: CalendarEventData): Promise<void> {\n    const response = await apiClient.post('/events/', {...event, start_time: event.start, end_time: event.end});\n    return response.data;\n  }\n\n\n\n// Delete event (removes the event from eventList based on eventId)\nexport async function deleteEvent(eventId: string): Promise<void> {\n    const response = await apiClient.delete(`/events/${eventId}/`);\n    return response.data;\n}\n\nexport async function getEvents():Promise<CalendarEvent[]>{\n    const response = await apiClient.get('/events/');\n    return response.data;\n}"],"mappings":"AACA,OAAOA,SAAS,MAAM,aAAa;;AAEnC;AACA,IAAIC,SAA0B,GAAG,CAC/B;EACEC,EAAE,EAAE,GAAG;EACPC,KAAK,EAAE,cAAc;EACrBC,KAAK,EAAE,IAAIC,IAAI,CAAC,0BAA0B,CAAC;EAC3CC,GAAG,EAAE,IAAID,IAAI,CAAC,0BAA0B,CAAC;EACzCE,WAAW,EAAE,wBAAwB;EACrCC,cAAc,EAAE;AAClB,CAAC,CACF;;AAED;AACA,OAAO,SAASC,WAAWA,CAAA,EAA6B;EACtD,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAK;IAC9BA,OAAO,CAACV,SAAS,CAAC;EACpB,CAAC,CAAC;AACJ;;AAGA;AACA,OAAO,eAAeW,WAAWA,CAACC,KAAwB,EAAiB;EACvE,MAAMC,QAAQ,GAAG,MAAMd,SAAS,CAACe,IAAI,CAAC,UAAU,EAAE;IAAC,GAAGF,KAAK;IAAEG,UAAU,EAAEH,KAAK,CAACT,KAAK;IAAEa,QAAQ,EAAEJ,KAAK,CAACP;EAAG,CAAC,CAAC;EAC3G,OAAOQ,QAAQ,CAACI,IAAI;AACtB;;AAIF;AACA,OAAO,eAAeC,WAAWA,CAACC,OAAe,EAAiB;EAC9D,MAAMN,QAAQ,GAAG,MAAMd,SAAS,CAACqB,MAAM,CAAC,WAAWD,OAAO,GAAG,CAAC;EAC9D,OAAON,QAAQ,CAACI,IAAI;AACxB;AAEA,OAAO,eAAeI,SAASA,CAAA,EAA2B;EACtD,MAAMR,QAAQ,GAAG,MAAMd,SAAS,CAACuB,GAAG,CAAC,UAAU,CAAC;EAChD,OAAOT,QAAQ,CAACI,IAAI;AACxB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}